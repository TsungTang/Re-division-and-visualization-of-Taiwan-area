part
aggregate(town.s@data, by=list(town.s@data[[i]]),
FUN=mean, na.rm=TRUE)
i
tmpdf= aggregate(town.s@data, by=list(town.s@data[[i]]),
FUN=mean, na.rm=TRUE)
town.s
town.s@data
aggregate(town.s@data, by=list(town.s@data[[i]]),
FUN=mean, na.rm=TRUE)
town.s@\
town.s@data
town.s@data %>>% rownames()
# addCircles(data = town.point.s, radius = 1000, stroke = F,
# fillColor = 'purple', fillOpacity = 0.8, group = 'town (point)') # Town point
tmpdf= aggregate(town.s@data, by=list(town.s@data[['cluster.demo']]),
FUN=mean, na.rm=TRUE)
tmpdf
mean(town.s[town.s$cluster.demo==1])
mean(town.s[town.s$cluster.demo==1,])
town.s[town.s$cluster.demo==1,]
town.s$cluster.demo
town.s$cluster.demo==1
aggregate(town.s@data, by=list(town.s@data[['cluster.demo']]),
FUN=mean, na.rm=TRUE)
temp = town.s
names(tmpdf)[-1]
names(tmpdf) <- c('cluster.demo' , paste0(names(tmpdf)[-1] ,'x' ))
tmpdf
# addCircles(data = town.point.s, radius = 1000, stroke = F,
# fillColor = 'purple', fillOpacity = 0.8, group = 'town (point)') # Town point
tmpdf= aggregate(town.s@data, by=list(town.s@data[['cluster.demo']]),
FUN=mean, na.rm=TRUE)
tmpdf$cluster.demo
temp = merge(temp ,tmpdf , by = 'cluster.demo')
temp = town.s
temp = merge(temp ,tmpdf , by = 'cluster.demo' , all.x = T)
temp
temp = town.s
temp
tmpdf
names(tmpdf) <- c('cluster.demo' , paste0(names(tmpdf)[-1] ,'x' ))
tmpdf
temp = merge(temp ,tmpdf , by = 'cluster.demo' , all.x = T)
temp
m <- leaflet(options = leafletOptions(minZoom = 7, maxZoom = 10)) %>% # 設定zoom範圍
addProviderTiles("Stamen.Toner") %>>%
setView(120.5825975, 23.583234, zoom = 8) %>% # 定位
# addTiles(urlTemplate = "http://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}&s=Ga", group = "google map") %>% # 底圖，google
addPolygons(data = county.s, weight = 3, color = 'brown', opacity = 0.8,
fill = F, group = 'county') %>% # county
addPolygons(data = town.s, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(ori, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>"),
group = 'original') # original
m <- m %>% addPolygons(data = town.s, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(cluster.demo, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", cluster.demo , "</b>"  ,
'<br>' ,'occI :' ,  round(occIx,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakkax,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginalx,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainlandx,3), '</b>' ,
'<br>' ,'elder :' ,  round(elderx,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhismx,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianityx,3), '</b>' ,
'<br>' ,'folk :' ,  round(folkx,3), '</b>' ,
'<br>' ,'non :' ,  round(nonx,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoismx,3), '</b>' ,
'<br>' ,'female :' ,  round(femalex,3), '</b>'
) , group = 'Clustering by demo')
temp
# clustring
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(cluster.demo, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", cluster.demo , "</b>"  ,
'<br>' ,'occI :' ,  round(occIx,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakkax,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginalx,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainlandx,3), '</b>' ,
'<br>' ,'elder :' ,  round(elderx,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhismx,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianityx,3), '</b>' ,
'<br>' ,'folk :' ,  round(folkx,3), '</b>' ,
'<br>' ,'non :' ,  round(nonx,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoismx,3), '</b>' ,
'<br>' ,'female :' ,  round(femalex,3), '</b>'
) , group = 'Clustering by demo')
m
# function mean by group
mean.bygroup = function(group.name){
temp = town.s
tmpdf= aggregate(town.s@data, by=list(town.s@data[[group.name]]),
FUN=mean, na.rm=TRUE)
names(tmpdf) <- c(group.name , paste0(names(tmpdf)[-1] ,'x' ))
temp = merge(temp ,tmpdf , by = group.name , all.x = T)
return(temp)
}
mean.bygroup('cluster.demo')
temp
town.s
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,'group.name')]
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,'cluster.demo')]
temp
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,'cluster.demo')]
tmpdf= aggregate(town.s@data, by=list(town.s@data[['cluster.demo']]),
FUN=mean, na.rm=TRUE)
tmpdf
# names(tmpdf) <- c(group.name , paste0(names(tmpdf)[-1] ,'x' ))
temp = merge(temp ,tmpdf , by = 'cluster.demo' , all.x = T)
temp
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,'cluster.demo')]
tmpdf= aggregate(town.s@data[,!c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE')] , by=list(town.s@data[['cluster.demo']]),
FUN=mean, na.rm=TRUE)
# names(tmpdf) <- c(group.name , paste0(names(tmpdf)[-1] ,'x' ))
temp = merge(temp ,tmpdf , by = 'cluster.demo' , all.x = T)
temp
town.s
# function mean by group
mean.bygroup = function(group.name){
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,group.name)]
tmpdf= aggregate(town.s@data[,!c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE')] , by=list(town.s@data[[group.name]]),
FUN=mean, na.rm=TRUE)
temp = merge(temp ,tmpdf , by = group.name , all.x = T)
return(temp)
}
mean.bygroup('cluster.demo')
temp = mean.bygroup('cluster.demo')
temp
temp = mean.bygroup('ori')
town.s$ori
aggregate( ~ ori, town.s, mean , na.rm = T)
aggregate(value ~ ori, town.s, mean , na.rm = T)
town.s
aggregate(life.pca1_2 ~ ori, town.s, mean , na.rm = T)
?aggregate
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,ori)]
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,'ori')]
tmpdf= aggregate(town.s@data[,!c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE')] , by=list(town.s@data[['ori']]),
FUN=mean, na.rm=TRUE)
tmpdf
temp = merge(temp ,tmpdf , by = 'ori' , all.x = T)
temp
tmpdf
temp
temp@data = merge(temp@data ,tmpdf , by = 'ori' , all.x = T)
tmpdf$ori
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,'ori')]
tmpdf= aggregate(town.s@data[,!c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE')] , by=list(town.s@data[['ori']]),
FUN=mean, na.rm=TRUE)
tmpdf
tmpdf[[ori]] = NULL
tmpdf[['ori']] = NULL
tmpdf
names(tmpdf)[1] = 'ori'
temp = merge(temp ,tmpdf , by = 'ori' , all.x = T)
temp
# function mean by group
mean.bygroup = function(group.name){
temp = town.s[,c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE' ,group.name)]
tmpdf= aggregate(town.s@data[,!c('zip', 'TOWNID' ,'TOWNCODE' ,'COUNTYNAME', 'TOWNNAME' ,'COUNTYID' ,'COUNTYCODE')] , by=list(town.s@data[[group.name]]),
FUN=mean, na.rm=TRUE)
tmpdf[[group.name]] = NULL
names(tmpdf)[1] = group.name
temp = merge(temp ,tmpdf , by = group.name , all.x = T)
return(temp)
}
temp = mean.bygroup('ori')
temp
m <- leaflet(options = leafletOptions(minZoom = 7, maxZoom = 10)) %>% # 設定zoom範圍
addProviderTiles("Stamen.Toner") %>>%
setView(120.5825975, 23.583234, zoom = 8) %>% # 定位
# addTiles(urlTemplate = "http://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}&s=Ga", group = "google map") %>% # 底圖，google
addPolygons(data = county.s, weight = 3, color = 'brown', opacity = 0.8,
fill = F, group = 'county') %>% # county
addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(ori, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
'<br>' ,'occI :' ,  round(occI,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakka,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginal,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainland,3), '</b>' ,
'<br>' ,'elder :' ,  round(elder,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhism,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianity,3), '</b>' ,
'<br>' ,'folk :' ,  round(folk,3), '</b>' ,
'<br>' ,'non :' ,  round(non,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoism,3), '</b>' ,
'<br>' ,'female :' ,  round(female,3), '</b>' ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>' ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>'
),
group = 'original') # original
m
temp = mean.bygroup('ori')
m <- leaflet(options = leafletOptions(minZoom = 7, maxZoom = 10)) %>% # 設定zoom範圍
addProviderTiles("Stamen.Toner") %>>%
setView(120.5825975, 23.583234, zoom = 8) %>% # 定位
# addTiles(urlTemplate = "http://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}&s=Ga", group = "google map") %>% # 底圖，google
addPolygons(data = county.s, weight = 3, color = 'brown', opacity = 0.8,
fill = F, group = 'county') %>% # county
addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(ori, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
'<br>' ,'occI :' ,  round(occI,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakka,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginal,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainland,3), '</b>' ,
'<br>' ,'elder :' ,  round(elder,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhism,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianity,3), '</b>' ,
'<br>' ,'folk :' ,  round(folk,3), '</b>' ,
'<br>' ,'non :' ,  round(non,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoism,3), '</b>' ,
'<br>' ,'female :' ,  round(female,3), '</b>' ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>' ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>'
),
group = 'original') # original
# addCircles(data = town.point.s, radius = 1000, stroke = F,
# fillColor = 'purple', fillOpacity = 0.8, group = 'town (point)') # Town point
temp = mean.bygroup('cluster.demo')
# clustring
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(cluster.demo, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", cluster.demo , "</b>"  ,
'<br>' ,'occI :' ,  round(occI,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakka,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginal,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainland,3), '</b>' ,
'<br>' ,'elder :' ,  round(elder,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhism,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianity,3), '</b>' ,
'<br>' ,'folk :' ,  round(folk,3), '</b>' ,
'<br>' ,'non :' ,  round(non,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoism,3), '</b>' ,
'<br>' ,'female :' ,  round(female,3), '</b>'
) , group = 'Clustering by demo')
temp = mean.bygroup('cluster.ST')
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(cluster.ST, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", cluster.ST , "</b>"  ,
'<br>' ,'college :' , round(college,3) , '</b>' ,
'<br>' ,'income :' ,  round(income,3) , '</b>' ,
'<br>' ,'occp :' ,  round(occp,3) , '</b>' ,
'<br>' ,'ses :' ,  round(ses,3), '</b>' ,
'<br>' ,'ses5 :' ,  round(ses5,3), '</b>'
) ,
group = 'Clustering by ST')
temp = mean.bygroup('cluster.life')
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(cluster.life, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", cluster.life , "</b>"  ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>'
) ,
group =  'Clustering by life')
m
# spatial
for ( i in c(part) ) {
temp = mean.bygroup(i)
if(str_detect(i , 'demo')){
m <- m %>% addPolygons(data = town.s, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(get(i), palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", get(i) , "</b>"  ,
'<br>',str_extract(i , "[^_]+") ,' :' , get(str_extract(i , "[^_]+")) , '</b>' ,
'<br>' ,'occI :' ,  round(occI,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakka,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginal,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainland,3), '</b>' ,
'<br>' ,'elder :' ,  round(elder,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhism,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianity,3), '</b>' ,
'<br>' ,'folk :' ,  round(folk,3), '</b>' ,
'<br>' ,'non :' ,  round(non,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoism,3), '</b>' ,
'<br>' ,'female :' ,  round(female,3), '</b>'
) ,
group = i) %>% # Town
addPolylines(data = line.list[[i]], weight = 3, color = 'red', opacity = 1, group = i) # line
}else if(str_detect(i , 'ST') ) {
m <- m %>% addPolygons(data = town.s, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(get(i), palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", get(i) , "</b>"  ,
'<br>',str_extract(i , "[^_]+") ,' :' , get(str_extract(i , "[^_]+")) , '</b>' ,
'<br>' ,'college :' , round(college,3) , '</b>' ,
'<br>' ,'income :' ,  round(income,3) , '</b>' ,
'<br>' ,'occp :' ,  round(occp,3) , '</b>' ,
'<br>' ,'ses :' ,  round(ses,3), '</b>' ,
'<br>' ,'ses5 :' ,  round(ses5,3), '</b>'
) ,
group = i) %>% # Town
addPolylines(data = line.list[[i]], weight = 3, color = 'red', opacity = 1, group = i) # line
}else if(str_detect(i , 'life')){
m <- m %>% addPolygons(data = town.s, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(get(i), palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", get(i) , "</b>"  ,
'<br>',str_extract(i , "[^_]+") ,' :' , get(str_extract(i , "[^_]+")) , '</b>' ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>'
) ,
group = i) %>% # Town
addPolylines(data = line.list[[i]], weight = 3, color = 'red', opacity = 1, group = i) # line
}
}
show <- c('county')
hide <- c('original', 'Clustering by demo','Clustering by ST','Clustering by life', part)
m <- m %>%
addLayersControl(
# baseGroups = c("google map", "country"),
overlayGroups = c(show, hide),
options = layersControlOptions(collapsed = F)) %>%
hideGroup(hide)
# m
saveWidget(m, file="map.html", selfcontained = F)
browseURL("map.html")
temp = mean.bygroup('ori')
m <- leaflet(options = leafletOptions(minZoom = 7, maxZoom = 10)) %>% # 設定zoom範圍
addProviderTiles("Stamen.Toner") %>>%
setView(120.5825975, 23.583234, zoom = 8) %>% # 定位
# addTiles(urlTemplate = "http://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}&s=Ga", group = "google map") %>% # 底圖，google
addPolygons(data = county.s, weight = 3, color = 'brown', opacity = 0.8,
fill = F, group = 'county') %>% # county
addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(ori, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
'<br>' ,'occI :' ,  round(occI,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakka,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginal,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainland,3), '</b>' ,
'<br>' ,'elder :' ,  round(elder,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhism,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianity,3), '</b>' ,
'<br>' ,'folk :' ,  round(folk,3), '</b>' ,
'<br>' ,'non :' ,  round(non,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoism,3), '</b>' ,
'<br>' ,'female :' ,  round(female,3), '</b>' ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>' ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>'
),
group = 'original') # original
# addCircles(data = town.point.s, radius = 1000, stroke = F,
# fillColor = 'purple', fillOpacity = 0.8, group = 'town (point)') # Town point
temp = mean.bygroup('cluster.demo')
# clustring
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(cluster.demo, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", cluster.demo , "</b>"  ,
'<br>' ,'occI :' ,  round(occI,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakka,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginal,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainland,3), '</b>' ,
'<br>' ,'elder :' ,  round(elder,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhism,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianity,3), '</b>' ,
'<br>' ,'folk :' ,  round(folk,3), '</b>' ,
'<br>' ,'non :' ,  round(non,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoism,3), '</b>' ,
'<br>' ,'female :' ,  round(female,3), '</b>'
) , group = 'Clustering by demo')
temp = mean.bygroup('cluster.ST')
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(cluster.ST, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", cluster.ST , "</b>"  ,
'<br>' ,'college :' , round(college,3) , '</b>' ,
'<br>' ,'income :' ,  round(income,3) , '</b>' ,
'<br>' ,'occp :' ,  round(occp,3) , '</b>' ,
'<br>' ,'ses :' ,  round(ses,3), '</b>' ,
'<br>' ,'ses5 :' ,  round(ses5,3), '</b>'
) ,
group = 'Clustering by ST')
temp = mean.bygroup('cluster.life')
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(cluster.life, palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", cluster.life , "</b>"  ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>'
) ,
group =  'Clustering by life')
# spatial
for ( i in c(part) ) {
temp = mean.bygroup(i)
if(str_detect(i , 'demo')){
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(get(i), palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", get(i) , "</b>"  ,
'<br>',str_extract(i , "[^_]+") ,' :' , get(str_extract(i , "[^_]+")) , '</b>' ,
'<br>' ,'occI :' ,  round(occI,3), '</b>' ,
'<br>' ,'hakka :' ,  round(hakka,3), '</b>' ,
'<br>' ,'aboriginal :' ,  round(aboriginal,3), '</b>' ,
'<br>' ,'mainland :' ,  round(mainland,3), '</b>' ,
'<br>' ,'elder :' ,  round(elder,3), '</b>' ,
'<br>' ,'buddhism :' ,  round(buddhism,3), '</b>' ,
'<br>' ,'christianity :' ,  round(christianity,3), '</b>' ,
'<br>' ,'folk :' ,  round(folk,3), '</b>' ,
'<br>' ,'non :' ,  round(non,3), '</b>' ,
'<br>' ,'taoism :' ,  round(taoism,3), '</b>' ,
'<br>' ,'female :' ,  round(female,3), '</b>'
) ,
group = i) %>% # Town
addPolylines(data = line.list[[i]], weight = 3, color = 'red', opacity = 1, group = i) # line
}else if(str_detect(i , 'ST') ) {
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(get(i), palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", get(i) , "</b>"  ,
'<br>',str_extract(i , "[^_]+") ,' :' , get(str_extract(i , "[^_]+")) , '</b>' ,
'<br>' ,'college :' , round(college,3) , '</b>' ,
'<br>' ,'income :' ,  round(income,3) , '</b>' ,
'<br>' ,'occp :' ,  round(occp,3) , '</b>' ,
'<br>' ,'ses :' ,  round(ses,3), '</b>' ,
'<br>' ,'ses5 :' ,  round(ses5,3), '</b>'
) ,
group = i) %>% # Town
addPolylines(data = line.list[[i]], weight = 3, color = 'red', opacity = 1, group = i) # line
}else if(str_detect(i , 'life')){
m <- m %>% addPolygons(data = temp, weight = 1, color = 'gray',
fill = T, fillOpacity = 1,
fillColor = ~col.factor(get(i), palette = 'Paired'),
popup = ~ paste("<b>", zip, COUNTYNAME, TOWNNAME, "</b>",
"<br>group :", get(i) , "</b>"  ,
'<br>',str_extract(i , "[^_]+") ,' :' , get(str_extract(i , "[^_]+")) , '</b>' ,
'<br>' ,'unhealth :' ,  round(unhealth,3) , '</b>' ,
'<br>' ,'unhappy :' ,  round(unhappy,3), '</b>' ,
'<br>' ,'unsatisfaction :' ,  round(unsatisfaction,3) , '</b>'
) ,
group = i) %>% # Town
addPolylines(data = line.list[[i]], weight = 3, color = 'red', opacity = 1, group = i) # line
}
}
show <- c('county')
hide <- c('original', 'Clustering by demo','Clustering by ST','Clustering by life', part)
m <- m %>%
addLayersControl(
# baseGroups = c("google map", "country"),
overlayGroups = c(show, hide),
options = layersControlOptions(collapsed = F)) %>%
hideGroup(hide)
# m
saveWidget(m, file="map.html", selfcontained = F)
browseURL("map.html")
library(data.table)
library(pipeR)
library(stringr)
library(rgdal) # readOGR
library(rgeos) # gCentroid
library(SPODT) # spatial partitioning
# install.packages('rgeos')
library(maptools) # unionSpatialPolygons
library(leaflet)
library( rmapshaper) # ms_simplify
library(RColorBrewer)
library(htmlwidgets) # saveWidget
# library(sp) # proj4string, spTransform
install.packages('SPODT')
#### data
# https://data.gov.tw/dataset/7441
town.ori <- readOGR('TOWN_MOI_1070516', 'TOWN_MOI_1070516', encoding = 'UTF-8', use_iconv = T)
town.main <- town.ori[!town.ori$COUNTYNAME %in% c('連江縣', '金門縣', '澎湖縣'),]
town.main
# https://data.gov.tw/dataset/37759
zip <- fread('data/外部資料/zip.csv' , encoding = 'UTF-8')
zip
# 變遷
demography <- readRDS("data/rdsfile/demography.df.pca.rds")
demography
class(demography)
?gCentroid
zip
